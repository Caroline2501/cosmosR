read.table(url, sep = '\t', header = TRUE)
}
omnipath <- download_omnipath()
omnipath <- omnipath[omnipath$is_stimulation != 0 | omnipath$is_inhibition != 0,]
omnipath_sif <- omnipath[omnipath$is_stimulation ==1,c(3,6,4)]
omnipath_sif_2 <- omnipath[omnipath$is_inhibition ==1,c(3,7,4)]
names(omnipath_sif) <- c("source","sign","target")
names(omnipath_sif_2) <- c("source","sign","target")
View(omnipath_sif_2)
omnipath_sif_2$sign <- -1
omnipath_sif <- as.data.frame(rbind(omnipath_sif,omnipath_sif_2))
carni_sif <- unique(as.data.frame(rbind(omnipath_sif,KSN_carni)))
carni_sif$source <- gsub("[-+{},;() ]","___",carni_sif$source)
carni_sif$target <- gsub("[-+{},;() ]","___",carni_sif$target)
write_tsv(carni_sif,"~/Dropbox/marco_metactivity/results/phosphoproteomic/sif_carni.tsv")
library(readr)
library(piano)
library(omicToolsTest)
sif_carni <- as.data.frame(read_delim("Dropbox/marco_metactivity/results/phosphoproteomic/sif_carni.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE))
bg <- unique(c(gsub("_.*","",sif_carni$source),gsub("_.*","",sif_carni$target)))
CARNI_att_res <- as.data.frame(read_csv("Dropbox/marco_metactivity/results/phosphoproteomic/results/CARNI_att_res.csv"))
sucesses <- unique(gsub("_.*","",CARNI_att_res$Nodes))
pathways <- gmt_to_csv("~/Documents/GDC_KIRK/c2.cp.v7.0.symbols.gmt")
sig_pathways <- runGSAhyper(sucesses, universe = bg, gsc = loadGSC(pathways))
sig_pathways_df <- as.data.frame(sig_pathways$resTab)
input_carni <- as.data.frame(read_delim("Dropbox/marco_metactivity/results/phosphoproteomic/input_carni.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE))
kinases <- as.data.frame(t(input_carni))
sig_pathways_df$sign <- unlist(lapply(row.names(sig_pathways_df), function(x, kinases, pathways){
return(mean(kinases[row.names(kinases) %in% pathways[pathways$term == x,1],1]))
},kinases = kinases, pathways = pathways))
sig_pathways_df <- sig_pathways_df[!is.nan(sig_pathways_df$sign),]
KEGG <- sig_pathways_df[grep("KEGG",row.names(sig_pathways_df)),c(1,2,7)]
KEGG <- KEGG[KEGG$`Adjusted p-value` <= 0.05,]
KEGG$pathway <- row.names(KEGG)
KEGG <- KEGG[,c(4,1,2,3)]
KEGG$pathway <- gsub("KEGG_","",KEGG$pathway)
View(KEGG)
load("~/Dropbox/kidney_cancer_multiomic_pipeline/results/multi_omic/final_sample/carnival_backup/results_CARNIVAL.Rdata")
sif <- as.data.frame(CARNIVAL_Result[[1]]$weightedSIF)
View(sif)
sif2 <- as.data.frame(CARNIVAL_Result2[[1]]$weightedSIF)
View(sif2)
library(readr)
metactivity_plasmax_2 <- read_csv("Dropbox/marco_metactivity/results/metactivity_plasmax_2.csv")
View(metactivity_plasmax_2)
library(readr)
ttop_plasmax_2_M1A <- read_csv("Dropbox/marco_metactivity/results/ttop_plasmax_2_M1A.csv")
View(ttop_plasmax_2_M1A)
knitr::opts_chunk$set(echo = TRUE)
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 1, rot = 45, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## For pheatmap_1.0.8 and later:
draw_colnames_45 <- function (coln, gaps, ...) {
coord = pheatmap:::find_coordinates(length(coln), gaps)
x = coord$coord - 0.5 * coord$size
res = textGrob(coln, x = x, y = unit(1, "npc") - unit(3,"bigpts"), vjust = 0.5, hjust = 1, rot = 45, gp = gpar(...))
return(res)}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
library(readr)
library(omicToolsTest)
library(vsn)
library(limma)
library(viper)
library(pheatmap)
library(ggplot2)
library(grid)
progenyScatter <- function(df,weight_matrix,dfID = 1, weightID = 1, statName = "gene stats")
{
plot_list_contrasts <- list(0)
for (i in 2:length(df[1,]))
{
plot_list_pathways <- list(0)
for (j in 2:length(weight_matrix[1,]))
{
sub_df <- df[,c(dfID,i)]
pathway_weights <- weight_matrix[,c(weightID,j)]
names(sub_df) <- c("ID","stat")
minstat <- min(sub_df$stat)
maxstat <- max(sub_df$stat)
histo <- ggplot(sub_df, aes(x = stat, fill = "blue")) + geom_density() + coord_flip() + scale_fill_manual( values = c("#00c5ff")) + xlim(minstat, maxstat) + theme_minimal() + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
names(pathway_weights) <- c("ID","weight")
pathway_weights <- pathway_weights[pathway_weights$weight != 0,]
percentile <- ecdf(sub_df$stat)
sub_df <- merge(sub_df,pathway_weights,by = "ID")
sub_df$color <- "3"
sub_df[(sub_df$weight > 0 & sub_df$stat > 0),"color"] <- "1"
sub_df[(sub_df$weight > 0 & sub_df$stat < 0),"color"] <- "2"
sub_df[(sub_df$weight < 0 & sub_df$stat > 0),"color"] <- "2"
sub_df[(sub_df$weight < 0 & sub_df$stat < 0),"color"] <- "1"
sub_df[(percentile(sub_df$stat) < .95 & percentile(sub_df$stat) > .05),1] <- NA
print(paste("weights of ",names(weight_matrix)[j], sep = ""))
title <- paste("weights of ",names(weight_matrix)[j], sep = "")
scatterplot <- ggplot(sub_df, aes(x = weight, y = stat, color = color)) + geom_point() +
# scale_colour_manual(values = c("#15ff00","#ff0000","#c9c9c9")) + #green and red
scale_colour_manual(values = c("red","royalblue3","grey")) +
geom_label_repel(aes(label = ID)) +
ylim(minstat, maxstat) + theme_minimal() + theme(legend.position = "none") + geom_vline(xintercept = 0, linetype = 'dotted') + geom_hline(yintercept = 0, linetype = 'dotted') + labs(x = title, y = statName)
lay <- t(as.matrix(c(1,1,1,1,2)))
gg <- arrangeGrob(scatterplot, histo, nrow = 1, ncol = 2, layout_matrix = lay)
#grid.arrange(gg)
plot_list_pathways[[j-1]] <- gg
}
names(plot_list_pathways) <- names(weight_matrix[,-weightID])
plot_list_contrasts[[i-1]] <- plot_list_pathways
}
return(plot_list_contrasts)
}
full_targets <- as.data.frame(read_delim("~/Documents/Rebekka_CXCL4/src/full_targets.csv",
";", escape_double = FALSE, trim_ws = TRUE))
full_targets$`Mouse group` <- gsub(" ","_",full_targets$`Mouse group`)
full_targets$cellTypeorMarker <- gsub("CD41","MegaK",full_targets$cellTypeorMarker)
full_targets$cellTypeorMarker <- gsub("TdTomato_Gli1","Stromal",full_targets$cellTypeorMarker)
full_targets$`Mouse group` <- paste(full_targets$cellTypeorMarker,full_targets$`Mouse group`, sep = "_")
full_targets <- full_targets[order(full_targets$`Mouse group`),]
full_targets$replicates <- rep(c(1,2,3),8)
full_targets$sample <- paste(full_targets$`Mouse group`,full_targets$replicates, sep = "_")
targets <- full_targets[,c(12,10)]
names(targets) <- c("sample","condition")
count_file_list <- list.files("~/Documents/Rebekka_CXCL4/data/", full.names = T)
count_file_names <- gsub("[.]counts","",list.files("~/Documents/Rebekka_CXCL4/data/", full.names = F))
count_df_list <- list()
for(count_file in count_file_list)
{
count_df <- as.data.frame(read_delim(count_file,
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE))
count_df_list[[gsub("[.]counts","",count_file)]] <- count_df
}
i <- 1
for(count_df in count_df_list)
{
if(i == 1)
{
batches <- count_df
}
else
{
batches <- merge(batches,count_df, by = "X1", all = T)
}
i <- i+1
}
names(batches) <- c("ID", count_file_names)
batches <- batches[-c(1:5),]
batches <- batches[,c("ID",full_targets$`Sample Name`)]
names(batches) <- c("ID",targets$sample)
row.names(batches) <- batches$ID
batches <- batches[,-1]
SDs <- apply(batches,1,sd)
means <- apply(batches,1,mean)
#batches <- batches[means > 5 | SDs > 15,]
batches <- batches[means > 50,]
batches[batches == 0] <- 0.1
fit <- vsnMatrix(as.matrix(batches))
meanSdPlot(fit)
batches <- as.data.frame(predict(fit,as.matrix(batches)))
#targets$KO <- gsub("_EV","",targets$condition)
#targets$KO <- gsub("_TPO","",targets$KO)
comparisons_2 <- list("MegaK_EV" = c(1,-3), "MegaK_TPO" = c(2,-4), "Stromal_EV" = c(5,-7), "Stromal_TPO" = c(6,-8))
limmaRes_2 <- runLimma(batches,targets,comparisons_2)
ttop_list <- list()
for(i in 1:length(comparisons_2))
{
ttop_list[[i]] <- ttopFormatter(topTable(limmaRes_2[[1]], coef = i, number = length(batches[,1]), adjust.method = "fdr"))
}
names(ttop_list) <- names(comparisons_2)
View(ttop_list[[1]])
View(ttop_list[[2]])
# save(file = "~/Documents/Rebekka_CXCL4/results/ttop_list.RData", ttop_list)
##ONLY IF CHECK EFFECT OF MUTATION
for(i in 1:length(comparisons_2))
{
if( i == 1)
{
t_table <- ttop_list[[i]][,c(1,4)]
}
else
{
t_table <- merge(t_table,ttop_list[[i]][,c(1,4)], by = "ID")
}
}
names(t_table) <- c("ID",names(comparisons_2))
View(t_table)
View(t_table)
dorothea_regulon_mouse_v1 <- as.data.frame(read_csv("~/Documents/OMIC_tools/omicToolsTest/data/dorothea_regulon_mouse_v1.csv"))
dorothea_regulon_mouse_viper_AB <- df_to_viper_regulon(dorothea_regulon_mouse_v1[dorothea_regulon_mouse_v1$confidence %in% c("A","B"),c(3,1,4)])
TF_activity_viper <- runViper(ttop_list, regulon = dorothea_regulon_mouse_viper_AB)
makeViperResDf <- function(viperResList)
{
i <- 1
for (viperRes in viperResList)
{
viperScores <- viperRes
viperScores <- data.frame(viperScores)
print(viperScores)
viperScores$ID <- row.names(viperScores)
names(viperScores)[1] <- i
if (i == 1)
{
viperResDf <- viperScores
}
else
{
viperResDf <- merge(viperResDf, viperScores, by = "ID", all = T)
}
i <- i+1
}
if(i > 2)
{
names(viperResDf)[2:length(viperResDf[1,])] <- names(viperResList)
}
else
{
viperResDf <- viperResDf[,c(2,1)]
names(viperResDf) <- c("ID", names(viperResList))
}
return(viperResDf)
}
TF_activity_viper_df <- makeViperResDf(viperResList = TF_activity_viper)
row.names(TF_activity_viper_df) <- TF_activity_viper_df$ID
View(TF_activity_viper_df)
TF_activity_viper_df <- TF_activity_viper_df[order(abs(TF_activity_viper_df[,3]), decreasing = T),]
to_write <- as.data.frame(t(TF_activity_viper_df[,-1]))
to_write <- to_write[2,1:50]
View(to_write)
TF_activity_viper_df <- TF_activity_viper_df[order(abs(TF_activity_viper_df[,3]), decreasing = T),]
TF_activity_viper_df <- TF_activity_viper_df[order(abs(TF_activity_viper_df[,3]), decreasing = T),]
TF_activity_viper_df <- TF_activity_viper_df[(TF_activity_viper_df[,3]) > 1.7,]
to_write <- as.data.frame(t(TF_activity_viper_df[,-1]))
View(to_write)
TF_activity_viper_df <- makeViperResDf(viperResList = TF_activity_viper)
row.names(TF_activity_viper_df) <- TF_activity_viper_df$ID
View(TF_activity_viper_df)
TF_activity_viper_df <- TF_activity_viper_df[order(abs(TF_activity_viper_df[,3]), decreasing = T),]
View(TF_activity_viper_df)
to_write <- as.data.frame(t(TF_activity_viper_df[abs(TF_activity_viper_df[,3]) > 1.7,-1]))
to_write <- to_write[1,1:ifelse(length(to_write[1,]) > 50, 50, length(to_write[1,]))]
View(to_write)
TF_activity_viper_df <- TF_activity_viper_df[order(abs(TF_activity_viper_df[,2]), decreasing = T),]
to_write <- as.data.frame(t(TF_activity_viper_df[,-1]))
TF_activity_viper_df <- TF_activity_viper_df[order(abs(TF_activity_viper_df[,3]), decreasing = T),]
to_write <- as.data.frame(t(TF_activity_viper_df[abs(TF_activity_viper_df[,3]) > 1.7,-1]))
to_write <- to_write[2,1:ifelse(length(to_write[1,]) > 50, 50, length(to_write[1,]))]
write_tsv(to_write,"~/Dropbox/Rebekka_CXCL4/results/TF_megaK_TPO.tsv")
library(readr)
library(omicToolsTest)
library(limma)
library(vsn)
library(readxl)
#Import data
raw_metabolomic <- as.data.frame(read_excel("Dropbox/kidney_cancer_multiomic_pipeline/data/metabolomic/raw_metabolomic.xlsx",
na = "NF"))
metab_id_correspondance <- as.data.frame(read_delim("Dropbox/kidney_cancer_multiomic_pipeline/support/metab_id_correspondance",
"\t", escape_double = FALSE, trim_ws = TRUE))
names(raw_metabolomic) <- c("ID", metab_id_correspondance$ID)
names(raw_metabolomic) <- gsub(" T","TU", names(raw_metabolomic))
names(raw_metabolomic) <- gsub(" H","KI", names(raw_metabolomic))
row.names(raw_metabolomic) <- raw_metabolomic[,1]
raw_metabolomic <- raw_metabolomic[,-1]
samples_to_keep <- c(paste(c("11", "15", "16", "24", "29", "32", "38", "40", "35"), "TU", sep = ""), paste(c("11", "15", "16", "24", "29", "32", "38", "40", "35"), "KI", sep = ""))
samples_to_keep <- samples_to_keep[samples_to_keep %in% names(raw_metabolomic)]
raw_metabolomic <- raw_metabolomic[,samples_to_keep]
min(raw_metabolomic, na.rm = T)
max(raw_metabolomic, na.rm = T)
targets_1 <- as.data.frame(matrix(NA,length(raw_metabolomic[1,]),2))
names(targets_1) <- c("sample","condition")
targets_1$sample <- names(raw_metabolomic)
targets_1$condition <- gsub("[0-9]*","",targets_1$sample)
View(raw_metabolomic)
View(targets_1)
View(metab_id_correspondance)
write_csv(raw_metabolomic,"~/Dropbox/COSMOS/data/raw_metabolomic.csv")
write_csv(targets_1,"~/Dropbox/COSMOS/data/metabolomic_targets.csv")
library(readr)
library(omicToolsTest)
library(vsn)
library(limma)
library(viper)
library(pheatmap)
psites_1 <- as.data.frame(read_csv("Dropbox/kidney_cancer_multiomic_pipeline/data/phospho/final_phoshpo_raw.csv")) #from 01_cleaning_limma_cell_comparison.R
row.names(psites_1) <- psites_1$ID
psites_1 <- psites_1[,-1]
targets_1 <- as.data.frame(matrix(NA,length(psites_1[1,]),2))
names(targets_1) <- c("sample","condition")
targets_1$sample <- names(psites_1)
targets_1$condition <- gsub("[0-9]*","",targets_1$sample)
View(psites_1)
write_csv(psites_1,"~/Dropbox/COSMOS/data/phosphoproteomic_raw.csv")
write_csv(targets_1, "~/Dropbox/COSMOS/support/phosphoproteomic_targets.csv")
View(psites_1)
psites_1 <- as.data.frame(read_csv("Dropbox/kidney_cancer_multiomic_pipeline/data/phospho/final_phoshpo_raw.csv")) #from 01_cleaning_limma_cell_comparison.R
row.names(psites_1) <- psites_1$ID
write_csv(psites_1[,c(19,1:18)],"~/Dropbox/COSMOS/data/phosphoproteomic_raw.csv")
psites_1[,c(19,1:18)]
View(psites_1)
write_csv(psites_1,"~/Dropbox/COSMOS/data/phosphoproteomic_raw.csv")
psites_1 <- as.data.frame(read_csv("Dropbox/kidney_cancer_multiomic_pipeline/data/phospho/final_phoshpo_raw.csv")) #from 01_cleaning_limma_cell_comparison.R
write_csv(psites_1,"~/Dropbox/COSMOS/data/phosphoproteomic_raw.csv")
library(readr)
library(omicToolsTest)
library(limma)
library(vsn)
library(readxl)
#Import data
raw_metabolomic <- as.data.frame(read_excel("Dropbox/kidney_cancer_multiomic_pipeline/data/metabolomic/raw_metabolomic.xlsx",
na = "NF"))
metab_id_correspondance <- as.data.frame(read_delim("Dropbox/kidney_cancer_multiomic_pipeline/support/metab_id_correspondance",
"\t", escape_double = FALSE, trim_ws = TRUE))
names(raw_metabolomic) <- c("ID", metab_id_correspondance$ID)
names(raw_metabolomic) <- gsub(" T","TU", names(raw_metabolomic))
names(raw_metabolomic) <- gsub(" H","KI", names(raw_metabolomic))
row.names(raw_metabolomic) <- raw_metabolomic[,1]
raw_metabolomic <- raw_metabolomic[,-1]
samples_to_keep <- c(paste(c("11", "15", "16", "24", "29", "32", "38", "40", "35"), "TU", sep = ""), paste(c("11", "15", "16", "24", "29", "32", "38", "40", "35"), "KI", sep = ""))
samples_to_keep <- samples_to_keep[samples_to_keep %in% names(raw_metabolomic)]
raw_metabolomic <- raw_metabolomic[,samples_to_keep]
min(raw_metabolomic, na.rm = T)
max(raw_metabolomic, na.rm = T)
targets_1 <- as.data.frame(matrix(NA,length(raw_metabolomic[1,]),2))
names(targets_1) <- c("sample","condition")
targets_1$sample <- names(raw_metabolomic)
targets_1$condition <- gsub("[0-9]*","",targets_1$sample)
View(raw_metabolomic)
to_write <- raw_metabolomic
to_write$metabolite <- row.names(to_write)
write_csv(to_write[,c(17,1:16)],"~/Dropbox/COSMOS/data/raw_metabolomic.csv")
library(readr)
library(ggplot2)
setwd("~/Dropbox/COSMOS/")
##Dorothea/viper
dorothea <- as.data.frame(read_csv("support/DOROTHEA_20200205.csv"))
dorothea <- dorothea[,c(4,3,6,7)]
dorothea$sign <- dorothea$is_stimulation - dorothea$is_inhibition
dorothea$sign <- ifelse(dorothea$sign == 0, 1, dorothea$sign)
dorothea <- dorothea[,c(1,2,5)]
ttop_tumorvshealthy <- as.data.frame(read_csv("results/transcriptomic/ttop_tumorvshealthy.csv"))
RNAseq_entrez_to_symbol <- as.data.frame(read_delim("support/RNAseq_entrez_to_symbol",
"\t", escape_double = FALSE, col_types = cols(`yourlist:M20191127216DA2B77BFBD2E6699CA9B6D1C41EB259129CL` = col_character()),
trim_ws = TRUE)) #from uniprot 20191127
names(RNAseq_entrez_to_symbol)[1] <- "ID"
ttop_tumorvshealthy <- merge(ttop_tumorvshealthy, RNAseq_entrez_to_symbol[,c(1,6)])
ttop_tumorvshealthy <- ttop_tumorvshealthy[,c(8,2:7)]
names(ttop_tumorvshealthy)[1] <- "ID"
ttop_tumorvshealthy$ID <- gsub(" .*","",ttop_tumorvshealthy$ID)
subnet_sif3_wTF <- as.data.frame(read_csv("results/multi_omic/carnival/subnet_sif3_wTF.csv"))
subnet_sif_full_att_wTF <- as.data.frame(read_csv("results/multi_omic/carnival/subnet_sif_full_att_wTF.csv"))
subnet_sif_full_att2_wTF <- as.data.frame(read_csv("results/multi_omic/carnival/subnet_sif_full_att2_wTF.csv"))
subnet_sif_full_att <- as.data.frame(rbind(subnet_sif_full_att_wTF, subnet_sif_full_att2_wTF))
subnet_sif_full_att <- unique(subnet_sif_full_att)
TPR_all <- c()
TPR_restricted <- c()
n_all <- c()
n_restricted <- c()
baseline <- c()
for( i in seq(1,2,0.1))
{
TF_carnival_net <- subnet_sif_full_att[subnet_sif_full_att$type == "TF",]
TF_targets_carnival_net <- subnet_sif_full_att[subnet_sif_full_att$Nodes %in% dorothea$target_genesymbol,]
TF_targets_carnival_net$true_carnival_target <- unlist(lapply(TF_targets_carnival_net$Nodes,function(x, TF_carnival_net) {
ifelse(sum(subnet_sif3_wTF[subnet_sif3_wTF$Node2 == x,"Node1"] %in% TF_carnival_net$Nodes), T, F) #If the target is directly downstream of a TF in carnival network
},TF_carnival_net = TF_carnival_net))
TF_targets_carnival_net <- TF_targets_carnival_net[TF_targets_carnival_net$true_carnival_target,]
TF_targets_carnival_net$TF_is_dorothea <- unlist(lapply(TF_targets_carnival_net$Nodes,function(x, TF_carnival_net) {
ifelse(sum(subnet_sif3_wTF[subnet_sif3_wTF$Node2 == x,"Node1"] %in% TF_carnival_net[TF_carnival_net$measured == 1, 1]), T, F) #If the target is directly downstream of a TF in carnival network
},TF_carnival_net = TF_carnival_net))
TF_targets_carnival_net$RNA_t_val <- unlist(lapply(TF_targets_carnival_net$Nodes, function(x, ttop_tumorvshealthy) {
if(x %in% ttop_tumorvshealthy$ID)
{
return(ttop_tumorvshealthy[ttop_tumorvshealthy$ID == x,"t"])
} else
{
return(NA)
}
}, ttop_tumorvshealthy = ttop_tumorvshealthy))
TF_targets_carnival_net <- TF_targets_carnival_net[complete.cases(TF_targets_carnival_net),]
# TF_targets_carnival_net <- TF_targets_carnival_net[abs(TF_targets_carnival_net$RNA_t_val) > i,]
TF_targets_carnival_net$RNA_t_val <- ifelse(abs(TF_targets_carnival_net$RNA_t_val) > i, TF_targets_carnival_net$RNA_t_val, 0)
row.names(TF_targets_carnival_net) <- 1:length(TF_targets_carnival_net[,1])
TPR_all <- c(TPR_all,sum(sign(TF_targets_carnival_net$Activity) == sign(TF_targets_carnival_net$RNA_t_val)) / length(TF_targets_carnival_net[,1])) #TPR
sum(sign(TF_targets_carnival_net$Activity) != sign(TF_targets_carnival_net$RNA_t_val)) / length(TF_targets_carnival_net[,1]) #FPR
TF_targets_carnival_net_not_dorothea <- TF_targets_carnival_net[!(TF_targets_carnival_net$TF_is_dorothea),]
TPR_restricted <- c(TPR_restricted,sum(sign(TF_targets_carnival_net_not_dorothea$Activity) == sign(TF_targets_carnival_net_not_dorothea$RNA_t_val)) / length(TF_targets_carnival_net_not_dorothea[,1])) #TPR
n_all <- c(n_all,length(TF_targets_carnival_net[,1]))
n_restricted <- c(n_restricted,length(TF_targets_carnival_net_not_dorothea[,1]))
tvals <- TF_targets_carnival_net_not_dorothea$RNA_t_val
tvals <- ifelse(abs(tvals) > i, tvals,0)
baseline <- c(baseline,(sum(sign(tvals) == 1)/length(tvals) + sum(sign(tvals) == -1)/length(tvals))/2)
}
TPR_all <- as.data.frame(cbind(seq(1,2,0.1),TPR_all))
TPR_all$group <- "all"
TPR_restricted <- as.data.frame(cbind(seq(1,2,0.1),TPR_restricted))
TPR_restricted$group <- "CARNIVAL"
names(TPR_all)[2] <- "TPR"
names(TPR_restricted)[2] <- "TPR"
# TPR <- as.data.frame(rbind(TPR_all, TPR_restricted))
TPR <- TPR_restricted
names(TPR)[1] <- "threshold"
# TPR$n <- c(n_all, n_restricted)
TPR$n <- n_restricted
baseline <- as.data.frame(baseline)
baseline$threshold <- seq(1,2,0.1)
baseline$n <- n_restricted
baseline$group <- "baseline"
names(baseline)[1]  <- "TPR"
baseline <- baseline[,c(2,1,4,3)]
TPR <- as.data.frame(rbind(TPR,baseline))
ggplot(TPR, aes(x = threshold, y = TPR, group = group, color = group)) + geom_line() + theme_minimal()
###########################
cor_net_tumor <- as.data.frame(read_csv("support/cor_net_tumor.csv"))
###########################
cor_net_tumor <- as.data.frame(read_csv("support/cor_net_tumor.csv"))
cor_net <- cor_net_tumor
corregs_carnival <- list()
k <- 1
for(node in unique(subnet_sif3_wTF$Node1))
{
df <- subnet_sif3_wTF[subnet_sif3_wTF$Node1 == node,]
df <- df[df$Node2 %in% subnet_sif_full_att[subnet_sif_full_att$measured == 1,1],]
row_list <- list()
l <- 1
if(length(df[,1]) > 1)
{
print(k)
for(i in 1:length(df[,1]))
{
for(j in i:length(df[,1]))
{
row_list[[l]] <- c(df[i,3],df[j,3],df[i,2]*df[j,2])
l <- l+1
}
}
corregs_carnival[[k]] <- as.data.frame(do.call(rbind,row_list))
names(corregs_carnival)[k] <- node
k <- k+1
}
}
corregs_carnival <- as.data.frame(do.call(rbind,corregs_carnival))
corregs_carnival <- corregs_carnival[corregs_carnival$V1 != corregs_carnival$V2,]
row.names(corregs_carnival) <- 1:length(corregs_carnival[,1])
corregs_carnival_inverse <- corregs_carnival
names(corregs_carnival_inverse) <- names(corregs_carnival_inverse)[c(2,1,3)]
corregs_carnival <- as.data.frame(rbind(corregs_carnival,corregs_carnival_inverse))
corregs_carnival$ID <- paste(corregs_carnival[,1],corregs_carnival[,2], sep = "_")
cor_net$ID <- paste(cor_net[,1],cor_net[,2], sep = "_")
comparison_regnets <- merge(cor_net[,c(4,3)], corregs_carnival[c(4,3)], by = "ID")
names(comparison_regnets) <- c("ID","correlation","carnival_correlation")
comparison_regnets$correlation <- as.numeric(as.character(comparison_regnets$correlation))
comparison_regnets$carnival_correlation <- as.numeric(as.character(comparison_regnets$carnival_correlation))
comparison_regnets <- unique(comparison_regnets)
comparison_regnets$correlation <- ifelse(abs(comparison_regnets$correlation) > 0.4, comparison_regnets$correlation, 0)
sum(sign(comparison_regnets$correlation) == sign(comparison_regnets$carnival_correlation)) / length(comparison_regnets[,1])
mean(abs(comparison_regnets[(sign(comparison_regnets$correlation) != sign(comparison_regnets$carnival_correlation)),2]))
TPR_coreg <- list()
baseline_coreg <- list()
j <- 1
for( i in seq(0.1,0.9,0.1))
{
comparison_regnets <- merge(cor_net[,c(4,3)], corregs_carnival[c(4,3)], by = "ID")
names(comparison_regnets) <- c("ID","correlation","carnival_correlation")
comparison_regnets$correlation <- as.numeric(as.character(comparison_regnets$correlation))
comparison_regnets$carnival_correlation <- as.numeric(as.character(comparison_regnets$carnival_correlation))
comparison_regnets <- unique(comparison_regnets)
comparison_regnets$correlation <- ifelse(abs(comparison_regnets$correlation) > i, comparison_regnets$correlation, 0)
# comparison_regnets <- comparison_regnets[abs(comparison_regnets$correlation) > i,]
TPR_coreg[[j]] <- c(i,length(comparison_regnets$ID),sum(sign(comparison_regnets$correlation) == sign(comparison_regnets$carnival_correlation)) / length(comparison_regnets[,1]))
baseline_coreg[[j]] <- c(i,length(comparison_regnets$ID),(sum(sign(comparison_regnets$correlation) == 1)/length(comparison_regnets$correlation) + sum(sign(comparison_regnets$correlation) == -1)/length(comparison_regnets$correlation))/2)
j <- j+1
}
TPR_coreg <- as.data.frame(do.call(rbind, TPR_coreg))
names(TPR_coreg) <- c("threshold","n","TPR")
TPR_coreg$group <- "CARNIVAL"
baseline_coreg <- as.data.frame(do.call(rbind, baseline_coreg))
names(baseline_coreg) <- c("threshold","n","TPR")
baseline_coreg$group <- "baseline"
TPR_coreg <- as.data.frame(rbind(TPR_coreg,baseline_coreg))
ggplot(TPR_coreg, aes(x = threshold, y = TPR, group = group, color = group)) + geom_line() + theme_minimal()
library(readr)
library(ggplot2)
setwd("~/Dropbox/COSMOS/")
##Dorothea/viper
dorothea <- as.data.frame(read_csv("support/DOROTHEA_20200205.csv"))
dorothea <- dorothea[,c(4,3,6,7)]
dorothea$sign <- dorothea$is_stimulation - dorothea$is_inhibition
dorothea$sign <- ifelse(dorothea$sign == 0, 1, dorothea$sign)
dorothea <- dorothea[,c(1,2,5)]
ttop_tumorvshealthy <- as.data.frame(read_csv("results/transcriptomic/ttop_tumorvshealthy.csv"))
RNAseq_entrez_to_symbol <- as.data.frame(read_delim("support/RNAseq_entrez_to_symbol",
"\t", escape_double = FALSE, col_types = cols(`yourlist:M20191127216DA2B77BFBD2E6699CA9B6D1C41EB259129CL` = col_character()),
trim_ws = TRUE)) #from uniprot 20191127
names(RNAseq_entrez_to_symbol)[1] <- "ID"
ttop_tumorvshealthy <- merge(ttop_tumorvshealthy, RNAseq_entrez_to_symbol[,c(1,6)])
ttop_tumorvshealthy <- ttop_tumorvshealthy[,c(8,2:7)]
names(ttop_tumorvshealthy)[1] <- "ID"
ttop_tumorvshealthy$ID <- gsub(" .*","",ttop_tumorvshealthy$ID)
subnet_sif3_wTF <- as.data.frame(read_csv("results/multi_omic/carnival/subnet_sif3_wTF.csv"))
subnet_sif_full_att_wTF <- as.data.frame(read_csv("results/multi_omic/carnival/subnet_sif_full_att_wTF.csv"))
subnet_sif_full_att2_wTF <- as.data.frame(read_csv("results/multi_omic/carnival/subnet_sif_full_att2_wTF.csv"))
subnet_sif_full_att <- as.data.frame(rbind(subnet_sif_full_att_wTF, subnet_sif_full_att2_wTF))
subnet_sif_full_att <- unique(subnet_sif_full_att)
TPR_all <- c()
TPR_restricted <- c()
n_all <- c()
n_restricted <- c()
baseline <- c()
View(subnet_sif_full_att)
